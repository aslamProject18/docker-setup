services:
  # Laravel App with FrankenPHP
  app:
    build:
      context: .
      dockerfile: DockerFile
    image: laravel-frankenphp
    container_name: laravel-app
    restart: unless-stopped
    ports:
      - "${APP_PORT:-80}:80"
      - "${APP_PORT_SSL:-443}:443"
    env_file:
      - .env
    volumes:
      - ./:/app
      - vendor_data:/app/vendor
      - node_modules_data:/app/node_modules
      - storage_data:/app/storage
    networks:
      - laravel
    depends_on:
      - mysql
      - redis

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: laravel-mysql
    restart: unless-stopped
    ports:
      - "${DB_FORWARD_PORT:-3306}:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - laravel

  # Redis for caching and queues
  redis:
    image: redis:7-alpine
    container_name: laravel-redis
    restart: unless-stopped
    ports:
      - "${REDIS_FORWARD_PORT:-6379}:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - laravel

  # Mailhog for email testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: laravel-mailhog
    restart: unless-stopped
    ports:
      - "${MAILHOG_SMTP_PORT:-1025}:1025"  # SMTP
      - "${MAILHOG_HTTP_PORT:-8025}:8025"  # Web UI
    networks:
      - laravel

  # Database Admin (phpMyAdmin)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: laravel-phpmyadmin
    restart: unless-stopped
    ports:
      - "${PHPMYADMIN_PORT:-8080}:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    networks:
      - laravel

  # Laravel Reverb WebSocket Server
  reverb:
    build:
      context: .
      dockerfile: DockerFile
    image: laravel-frankenphp
    container_name: laravel-reverb
    restart: unless-stopped
    ports:
      - "${REVERB_PORT:-8081}:8080"
    env_file:
      - .env
    command: ["php", "artisan", "reverb:start", "--host=0.0.0.0", "--port=8080"]
    volumes:
      - ./:/app
      - vendor_data:/app/vendor
      - node_modules_data:/app/node_modules
      - storage_data:/app/storage
    networks:
      - laravel
    depends_on:
      - mysql
      - redis

# Docker Networks
networks:
  laravel:
    driver: bridge

# Volumes
volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  vendor_data:
    driver: local
  node_modules_data:
    driver: local
  storage_data:
    driver: local
