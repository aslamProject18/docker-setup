version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7
    container_name: mern-mongodb
    restart: unless-stopped
    ports:
      - "${MONGO_PORT:-27017}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - mern

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: mern-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - mern

  # Node.js Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    image: mern-backend
    container_name: mern-backend
    restart: unless-stopped
    ports:
      - "${BACKEND_PORT:-5000}:5000"
    env_file:
      - .env
    volumes:
      - ./:/app
      - node_modules_backend:/app/node_modules
    networks:
      - mern
    depends_on:
      - mongodb
      - redis
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true

  # React Frontend
  frontend:
    image: node:20-alpine
    container_name: mern-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    working_dir: /app
    volumes:
      - ./frontend:/app
      - node_modules_frontend:/app/node_modules
    networks:
      - mern
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - FAST_REFRESH=false
    command: sh -c "npm install && npm start"
    depends_on:
      - backend

  # MongoDB Admin (Mongo Express)
  mongo-express:
    image: mongo-express:latest
    container_name: mern-mongo-express
    restart: unless-stopped
    ports:
      - "${MONGO_EXPRESS_PORT:-8081}:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD}
    networks:
      - mern
    depends_on:
      - mongodb

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: mern-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/build:/usr/share/nginx/html:ro
    networks:
      - mern
    depends_on:
      - frontend
      - backend
    profiles:
      - production

# Docker Networks
networks:
  mern:
    driver: bridge

# Volumes
volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  node_modules_backend:
    driver: local
  node_modules_frontend:
    driver: local